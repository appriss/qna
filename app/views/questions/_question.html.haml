-title = question.title
-if question.closed
  -title += " [#{t("closed", :scope => "activerecord.attributes.question").upcase}]"

-if !local_assigns[:mini]
  -last_target_id, last_target_date, owner = question.find_last_target
  - if question.last_target_type != 'Question'
    - @updated = true
  - else
    - @updated = false

  %article{:class => class_for_question(question), :id => question.id}
    %a{:href => question_path(question)}
      .votes
        .mini-counts= question.votes_average
        .text votes
      .status{:class => [question.answers_count==0 ? "unanswered" : "", question.accepted ? "accepted" : ""]}
        .mini-counts= question.answers_count
        .text answers
      .views
        .mini-counts= question.views_count
        .text views
    .summary.clearfix
      .title
        -if question.wiki
          = pjax_link_to t('.wiki_title', :title => title), "question", question_path(question), :title => truncate(strip_tags(question.body), :length => 200)
        -else
          = pjax_link_to title, "question", question_path(question), :title => truncate(strip_tags(question.body), :length => 200)
      .tags
        - question.tags.each do |tag_name|
          %a.post-tag{:href => tag_path(:id => CGI.escape(tag_name))}= tag_name
      .started
        %span.relativetime #{time_ago_in_words(last_target_date)} ago
        %a.author{:href => user_path(owner)}= owner.login
        %span.reputation-score(title="#{owner.login}'s reputation: #{format_number(owner.reputation_on(current_group))}")= format_number(owner.reputation_on(current_group))

    .clear

-else
  %article{:class => "#{class_for_question(question)} #{local_assigns[:lite] ? 'lite' : ''}"}
    %h3
      = pjax_link_to title, "question", question_path(question)

    .toolbar
      %ul
        %li.answers
          = link_to "#{format_number(question.answers_count)} #{t(:answers, :scope => "activerecord.attributes.question")}"
